using System;

namespace TOH_Iterative
{
    internal class Program
    {
        static void Main(string[] args)
        {
            char fromStack = 'A';
            char helperStack = 'B';
            char toStack = 'C';
            int numOfDisks;
            while (!int.TryParse(GetDisks(), out numOfDisks))
            {
                Console.WriteLine("This is not a number. Please enter a valid number.");
            }

            DiskMovement(numOfDisks, 'A', 'C', 'B');
            Console.WriteLine("The stack is now sorted. ");
        }

        static string GetDisks()
        {
            Console.WriteLine("How many disks would you like to move? ");
            return Console.ReadLine();
        }

        static void DiskMovement(int disks, char source, char dest, char aux)
        {
            double numOfMoves = Math.Pow(2, disks) - 1;
            int currentDisk = 1;
            int amountOfDisks = disks;
            for (int i = 1; i < numOfMoves; i++)
            {
                if (amountOfDisks % 2 == 0)
                {
                    if (i % 3 == 1)
                    {
                        // legal movement between A & B
                        Console.WriteLine("Move disk " + currentDisk + " from " + );
                        // currentDisk++; // place holder to affect the disk count

                    }
                    else if (i % 3 == 2)
                    {
                        // legal movement between A & C
                        Console.WriteLine();
                        //currentDisk--; // place holder
                    }
                    else
                    {
                        // legal movement between B & C
                        Console.WriteLine();
                        //currentDisk--; // place holder

                    }
                }
                if (amountOfDisks % 2 != 0)
                {
                    if (i % 3 == 1)
                    {
                        // legal movement between A(source) & C(dest)
                        Console.WriteLine();
                        //currentDisk--; // place holder

                    }
                    else if (i % 3 == 2)
                    {
                        // legal movement between A & B
                        Console.WriteLine();
                        //currentDisk--; // place holder

                    }
                    else
                    {
                        // legal movement between B & C
                        Console.WriteLine();
                        //currentDisk--; // place holder
                    }
                }
                char temp = fromStack;
                fromStack = toStack;
                toStack = helperStack;
                helperStack = temp;

            }
        }
    }
}
