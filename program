using System;

namespace TOH_Iterative
{
    internal class Program
    {
        static void Main(string[] args)
        {
            char fromStack = 'A';
            char helperStack = 'B';
            char toStack = 'C';
            int numOfDisks;
            while (!int.TryParse(GetDisks(), out numOfDisks))
            {
                Console.WriteLine("This is not a number. Please enter a valid number.");
            }

            DiskMovement(numOfDisks, 'A', 'C', 'B');
            Console.WriteLine("The stack is now sorted. ");
        }

        static string GetDisks()
        {
            Console.WriteLine("How many disks would you like to move? ");
            return Console.ReadLine();
        }

        static void DiskMovement(int disks, char source, char dest, char aux)
        {
            double numOfMoves = Math.Pow(2, disks) - 1;
            int currentDisk = 1;
            if (disks <= 0)
            {
                return;
            }

            if (currentDisk % 2 == 0)
            {
                char temp = dest;
                dest = aux;
                aux = temp;
            } 

            for (int i = 1; i < numOfMoves; i++)
            {

                if (i % 3 == 1)
                {
                    // legal movement between source + dest
                    Console.WriteLine($"Move disk {currentDisk} from {source} to {dest}");
                    currentDisk++; // place holder to affect the disk count

                }
                else if (i % 3 == 2)
                {
                    // legal movement between source + aux
                    Console.WriteLine($"Move disk {currentDisk} from {source} to {aux}");
                    //currentDisk--; // place holder
                }
                else
                {
                    // legal movement between aux + dest
                    Console.WriteLine($"Move disk {currentDisk} from {aux} to {dest}");
                    currentDisk--; // place holder
                }


            }
        }
    }
} 
